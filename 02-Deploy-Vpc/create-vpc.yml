---
- name: Create IBM Cloud VPC and Associated Resources 
  hosts: localhost
  vars:
    ibmcloud_api_key: "{{ lookup('env', 'IC_API_KEY') }}"
    region: "{{ lookup('env', 'IC_REGION') }}"
    resource_group: "{{ lookup('env', 'IC_RESOURCE_GROUP') }}"
    name_prefix: "{{ name_prefix }}"
    ssh_key: "{{ ssh_key }}"
    instance_profile: "bx2-4x16"
    instance_image: "{{ instance_image }}" 
  collections:
   - ibm.cloudcollection
  tasks:
    - name: Gather Resource Group ID
      ibm_resource_group_info:
        name: "{{ resource_group }}"
      register: rg

    - name: "Gather zones in {{ region }} region "
      ibm_is_zones_info:
        region_: "{{ region }}"
      register: regional_zones

    - name: "Create VPC in {{ region }} region"
      ibm_is_vpc:
        name: "{{ name_prefix }}-vpc"
        state: available
        resource_group: "{{ rg.resource['id'] }}"
        tags: 
          - "owner:ryantiffany"
          - "deployedwith:ansible"
      register: vpc_create_output

    - name: Save VPC as fact
      set_fact:
        cacheable: True
        vpc: "{{ vpc_create_output.resource }}"

    - name: "Configure VPC Public Gateway in {{ regional_zones.resource.zones[0] }} zone."
      ibm_is_public_gateway:
        name: "{{ name_prefix }}-pubgw"
        vpc: "{{ vpc_create_output.resource['id'] }}"
        zone: "{{ regional_zones.resource.zones[0] }}"
        resource_group: "{{ rg.resource['id'] }}"
        tags: 
          - "owner:ryantiffany"
          - "deployedwith:ansible"
      register: pubgw_create_output

    - name: Save Public Gateway as fact
      set_fact:
        cacheable: True
        vpc: "{{ pubgw_create_output.resource }}"

    - name: "Configure VPC Subnet in {{ regional_zones.resource.zones[0] }} zone."
      ibm_is_subnet:
        name: "{{ name_prefix }}-subnet"
        state: available
        id: "{{ subnet.id | default(omit) }}"
        vpc: "{{ vpc_create_output.resource['id'] }}"
        total_ipv4_address_count: 256
        zone: "{{ regional_zones.resource.zones[0] }}"
        resource_group: "{{ rg.resource['id'] }}"
        public_gateway: "{{ pubgw_create_output.resource['id'] }}"
        tags: 
          - "owner:ryantiffany"
          - "deployedwith:ansible"
      register: subnet_create_output

    - name: Save VPC Subnet as fact
      set_fact:
        cacheable: True
        subnet: "{{ subnet_create_output.resource }}"

    - name: Retrieve image for compute instances 
      ibm_is_image_info:
        name: "{{ instance_image }}"
      register: image

    - name: "Gather {{ region }} SSH key to use for VSI"
      ibm_is_ssh_key_info: 
        name: "{{ ssh_key }}"
        resource_group: "{{ rg.resource['id'] }}"
      register: sshkey

    - name: "Deploy VPC compute instance"
      ibm_is_instance:
        name: "{{ name_prefix }}-vsi"
        state: available
        id: "{{ vsi.id | default(omit) }}"
        vpc: "{{ vpc_create_output.resource['id'] }}"
        profile: "{{ instance_profile }}"
        image: "{{ image.resource['id'] }}"
        keys:
          - "{{ sshkey.resource['id'] }}"
        primary_network_interface:
          - subnet: "{{ subnet.id }}"
        zone: "{{ regional_zones.resource.zones[0] }}"
        resource_group: "{{ rg.resource['id'] }}"
        tags: 
          - "owner:ryantiffany"
          - "deployedwith:ansible"
      register: vsi_create_output

    - name: Save VSI as fact
      set_fact:
        cacheable: True
        vsi: "{{ vsi_create_output.resource }}"

    - name: Configure Floating IP Address
      ibm_is_floating_ip:
        name: "{{ name_prefix }}-fip"
        state: available
        id: "{{ fip.id | default(omit) }}"
        target: "{{ vsi.primary_network_interface[0]['id'] }}"
      register: fip_create_output

    - name: Save Floating IP as fact
      set_fact:
        cacheable: True
        fip: "{{ fip_create_output.resource }}"

    - name: Print Floating IP Address
      debug:
        msg: "IP Address: {{ fip.address }}"

    - name: Configure Security Group Rule to open SSH on the VSI
      ibm_is_security_group_rule:
        state: available
        group: "{{ vpc_create_output.resource['default_security_group'] }}"
        direction: inbound
        remote: 0.0.0.0/0
        tcp:
          - port_max: 22
            port_min: 22

    - name: Add VSI to Ansible inventory
      add_host:
        name: "{{ name_prefix }}-vsi"
        ansible_host:  "{{ fip.address }}" 
        ansible_user: root
        groups: new_vsi
        ansible_ssh_extra_args: -o StrictHostKeyChecking=no

- name: Check Ansible connection to new DEMO VSI
  hosts: new_vsi
  gather_facts: False
  tasks:
    - name: Wait for VSI to become reachable over SSH
      wait_for_connection:

- name: Check Ansible connection to new DEMO VSI
  hosts: new_vsi
  tasks:
    - name: Collect OS information
      command: cat /etc/os-release
      register: os_info

    - name: Print OS information
      debug:
        var: os_info.stdout_lines
